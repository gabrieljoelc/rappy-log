name: Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DEPLOY_NODE_VERSION: 16

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18, 20]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test

  deploy-github:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEPLOY_NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
      - name: Check if GitHub Packages version has changed
        id: check_github_publish
        run: |
          LAST_GITHUB_VERSION=$(npm show @${{ github.repository_owner }}/rappy-log version 2>/dev/null || echo "0.0.0")
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current version in package.json: $CURRENT_VERSION"
          echo "Last published version on GitHub Packages: $LAST_GITHUB_VERSION"
          if [ "$CURRENT_VERSION" != "$LAST_GITHUB_VERSION" ]; then
            echo "New version detected for GitHub Packages. Proceeding with publish."
            echo "publish_github=true" >> $GITHUB_ENV
          else
            echo "No version change detected for GitHub Packages. Skipping publish."
            echo "publish_github=false" >> $GITHUB_ENV
          fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to GitHub Packages
        if: env.publish_github == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-npm:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEPLOY_NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
      - name: Check if npm registry version has changed
        id: check_npm_publish
        run: |
          LAST_NPM_VERSION=$(npm show rappy-log version 2>/dev/null || echo "0.0.0")
          CURRENT_VERSION=$(jq -r '.version' package.json)
          if [ "$CURRENT_VERSION" != "$LAST_NPM_VERSION" ]; then
            echo "New version detected for npm registry. Proceeding with publish."
            echo "publish_npm=true" >> $GITHUB_ENV
          else
            echo "No version change detected for npm registry. Skipping publish."
            echo "publish_npm=false" >> $GITHUB_ENV
          fi
      - name: Configure npm for npm Registry
        if: env.publish_npm == 'true'
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm Registry
        if: env.publish_npm == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
